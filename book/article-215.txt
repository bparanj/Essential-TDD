PUBLISHED

Docker Basics : Check Docker Installation

Objective
=========
---------

To check the Docker installation

Test the Docker Client
---------

Use the docker client to confirm the Docker daemon is running:

```sh
$ docker version
```

```sh
Client version: 1.6.2
Client API version: 1.18
Go version (client): go1.4.2
Git commit (client): 7c8fca2
OS/Arch (client): darwin/amd64
Server version: 1.6.2
Server API version: 1.18
Go version (server): go1.4.2
Git commit (server): 7c8fca2
OS/Arch (server): linux/amd64
```

Test Docker Works
---------

```sh
$ docker run ubuntu echo hello world
```

```sh
hello world
```

Docker Client Help
---------

Use the docker ehlp command to see what the Docker client can do.

```sh
$docker help
```

```sh
Usage: docker [OPTIONS] COMMAND [arg...]

A self-sufficient runtime for linux containers.

Options:
  -D, --debug=false                                         Enable debug mode
  -d, --daemon=false                                        Enable daemon mode
  -H, --host=[]                                             Daemon socket(s) to connect to
  -h, --help=false                                          Print usage
  -l, --log-level=info                                      Set the logging level
  --tls=false                                               Use TLS; implied by --tlsverify
  --tlscacert=~/.boot2docker/certs/boot2docker-vm/ca.pem    Trust certs signed only by this CA
  --tlscert=~/.boot2docker/certs/boot2docker-vm/cert.pem    Path to TLS certificate file
  --tlskey=~/.boot2docker/certs/boot2docker-vm/key.pem      Path to TLS key file
  --tlsverify=true                                          Use TLS and verify the remote
  -v, --version=false                                       Print version information and quit

Commands:
    attach    Attach to a running container
    build     Build an image from a Dockerfile
    commit    Create a new image from a container's changes
    cp        Copy files/folders from a container's filesystem to the host path
    create    Create a new container
    diff      Inspect changes on a container's filesystem
    events    Get real time events from the server
    exec      Run a command in a running container
    export    Stream the contents of a container as a tar archive
    history   Show the history of an image
    images    List images
    import    Create a new filesystem image from the contents of a tarball
    info      Display system-wide information
    inspect   Return low-level information on a container or image
    kill      Kill a running container
    load      Load an image from a tar archive
    login     Register or log in to a Docker registry server
    logout    Log out from a Docker registry server
    logs      Fetch the logs of a container
    port      Lookup the public-facing port that is NAT-ed to PRIVATE_PORT
    pause     Pause all processes within a container
    ps        List containers
    pull      Pull an image or a repository from a Docker registry server
    push      Push an image or a repository to a Docker registry server
    rename    Rename an existing container
    restart   Restart a running container
    rm        Remove one or more containers
    rmi       Remove one or more images
    run       Run a command in a new container
    save      Save an image to a tar archive
    search    Search for an image on the Docker Hub
    start     Start a stopped container
    stats     Display a stream of a containers' resource usage statistics
    stop      Stop a running container
    tag       Tag an image into a repository
    top       Lookup the running processes of a container
    unpause   Unpause a paused container
    version   Show the Docker version information
    wait      Block until a container stops, then print its exit code

Run 'docker COMMAND --help' for more information on a command.
```

Summary
========
---------

In this article, you learned how to check the Docker client installation.
