Dec 13, 12

1. Selenium IDE and Selenium Flow Control FF plugin. Problem installing on FF 17.0. Ditched it.
2. * Passing Custom Variable in Express Checkout *
I am using the Express Checkout as a third party shopping cart provider. I read the integration guide but I could not find any details on how to pass a custom variable in Express Checkout API. Where can I get more details?
3. Setup Capybara for blackbox testing.
4. Store txn_id in database. Stored in order#details['PaymentRequestInfo']['TransactionId'] and transaction#details['PaymentInfo']['TransactionID']
txn_id - The merchant’s original transaction identification number for the payment from the buyer, against which the case was registered.
5. Verify that the payment amount actually matches what you intend to charge.

Dec 12, 12

1. There is a chance that the order confirmation number generated could be duplicate between the time it was generated and it was saved in the db. Fix this issue. Create Token model and move order confirmation generation to it.
2. Save payer_email to send order confirmation and fulfillment emails.
3. Use a separate logger for IPN messages in Paypal IPN controller. Refer : https://gist.github.com/2453949 and custom-logger.txt
4. Simulate IPN notification via curl and check if the latest version works. 
5. Wrote a rake task to create the IPN notification query parameters to be used in Curl in development.
6. Create Payment model and store
        - Paypal transaction_id.              _/
        - user_id (most likely payer_email)   _/
        - order_id -                          ><     (order id not stored, transaction id is stored instead) 
        - payment_date - Time/Date stamp generated by PayPal. Length: 28 characters _/
7. Asynchronous process - IPN allows you to automatically update a database with the transaction details, send a customized order confirmation email message to the buyer. 
8. The following is now handled by IPN handler:

Orders controller will handle the 'Buy Now' button clicked on the sales page and handle the bounty :

Copy the OrdersController from zstore and fill in the TODO line:

if @order.save
  if @order.purchase
    # TODO : Read the cookie value here, find the affiliate who had set this cookie and record the bounty here.
    render action: 'success'
  else
    render action: 'failure'
  end
else
  render action: 'new'
end
9. Integrate the app to Paypal Express Checkout.
10. Create account for Paypal developer forum x.com
11. Paypal logger should have time stamp
12. https://cms.paypal.com/cms_content/US/en_US/files/developer/PP_AcceleratedBoarding_Guide.pdf is now part of repo.
13. Validate that the receiver_email is an email address registered in your PayPal account, to prevent the payment from being sent to a fraudster’s account. This is the user#spoofed_receiver_email? fraud check.

Dec 11, 12

1. Reviewed and gave feedback on Vio Wireframe version 3 to Arun
2. Find the subject field in the latest Paypal API docs
3. Email a password to your customer for downloading digital media. NOT REQUIRED.
4. Setup Paypal Sandbox accounts for seller and buyer with credit card and bank accounts.
    payer_status - Whether the customer has a verified PayPal account. NOT REQUIRED.
5. invoice is one of the IPN variable (params['invoice'])
6. How to send invoice id during express checkout?
	 pass order confirmation number as the value for invoice_id (passed in as order_id)

	 Paypal::Notification methods
	 
	 def account
	   params['business'] || params['receiver_email']
	 end
	 
	 # This is the item number which we submitted to paypal 
	 # The custom field is also mapped to item_id because PayPal
	 # doesn't return item_number in dispute notifications
	 def item_id
	   params['item_number'] || params['custom']
	 end
7. Integrate IPN Handler with Cahor. Needed to get refund notification, fraud report etc.

Dec 10, 12

1. Drop the database, recreate all tables and run the test.
2. Replace hard coded product name with variable in the product mailer emails.
3. Wrote the checkout with affiliate referrer code set test case.
4. Test checkout manually. Hit payment_notifications with curl to make sure it works. 
5. Replace JKASS in the confirmation emails with Paypal.

Dec 9, 12

1. Decided that there is no need to display quantity or product name on the paypal checkout page.
2. Order id should not be used in the confirmation page. Generate a unique confirmation number and use that in the email and success page. Add a new field to order called : confirmation_number.

Dec 8, 12

1. Removed 'Actions' and 'S.No' headings
2. Design reviewed and feedback sent to Arun
3. Sales controller should be renamed to PaypalNotifications controller with paypal_notifications table. Delete sales model.

Dec 7, 12

1. Send and receive affiliate referrer_code as the custom pass through variable to Paypal.
2. Populate product_id in orders table.
3. Product price in cents must be returned. Implement Produce price_in_cents method.
4. Send fulfillment email to buyer_email in orders table.

Dec 6, 12

1. Encapsulate payment processing logic in PaypalGateway
2. Display receipt after successful order in orders/success.html.erb file. 
3. product_id is not an IPN variable. Removed from sales table.

Dec 5, 12

1. How to get buyer email from Paypal. 
2. Pass custom variable during purchase process and retrieve it when details_for is called.

def add_payment_details(xml, money, currency_code, options = {})
  xml.tag! 'n2:Custom', options[:custom] unless options[:custom].blank?
end
3. Drop db and recreate all tables
4. Verify that callback_url does the same job as notify_url for IPN callback. 
	[It does not. Use notify_url]

Dec 4, 12

1. Create the paper prototype for version 1 and mail it to Arun.

Dec 3, 12

1. New_Vio wireframe is the starting point. Combine feedback and mail it to Arun.


