1. Debit refunds when calculating payable_commission for affiliates.
   t.decimal  "payable_commission",  :precision => 11, :scale => 2, :default => 0.0, :null => false
   Monthly CRON will populate this field.
2. Create paper prototype and delegate the CSS design to Elance.
3. Refer pragmatic-order.pdf. Generate pdf receipt.
4. Make email customizable. Users can enter details about bonus links.
5. Cancel return url must be a page where you can persuade the buyer.
6. Measure time taken from click to getting to the landing page. Monitor this constantly. Make this very fast.
7. Instructions on how to set name as it appears on cc statement. How to get the merchant name as it appears on credit card? This should be used in the confirmation emails.
 Replace PAYPAL in the confirmation emails with the actual text for Paypal charge as seen on cc statement.
8. Affiliate login with sales report
9. Udemy for low priced version of the book. Can book be included?
10. Kindle format in Kindle store (lower priced version)
11. Test 'Click here to buy screencasts'. Measure click through rate.
12. Use Chef to deploy the site. Get peepcode.
13. The following items are gone if Zepho Inc becomes a partner with certified shopping cart that uses Accelerated Onboarding.
   a) How to Add Zepho Inc as New Third Party Permissions in production ?
   b) Getting error : Please enter valid API username. Post this problem in Paypal forum.
   c) Find the Third-Party API Grant access screen in the current Paypal website.
14. Review Paypal IPN Up and Running. Create task list based on this book.
15. Read IPN guide and implement the validation rules for fields.
16. https://cms.paypal.com/cms_content/US/en_US/files/developer/PP_AcceleratedBoarding_Guide.pdf
17. Read Paypal Sandbox Users Guide and Create a task list.
18. Use a separate logger for IPN messages in Paypal IPN controller. Refer : https://gist.github.com/2453949 and custom-logger.txt
19. How to check the HTTP response code in ActiveMerchant? Post in ActiveMerchant Google group forum
20. Validate that the receiver_email is an email address registered in your PayPal account, to prevent the payment from being sent to a fraudster’s account.
21. Check other transaction details, such as the item number and price, to confirm that the price has not been changed by a malicious third party.
22. If you receive an INVALID response, then either you’ve done something wrong or the original IPN should be treated as suspicious and investigated.
23. IPN script should make sure to respond to the HTTP response with a 200 OK message to prevent additional attempts by PayPal to send the IPN.
24. Write Integration Test that hits the Paypal sandbox
25. Create Payment model and store
        - Paypal transaction_id.
        - user_id (most likely payer_email)
        - order_id - payment_date - Time/Date stamp generated by PayPal. Length: 28 characters
        - description != notify.params[‘item_name] (Use custom variable to store the id of the record that contains the pass through variable fields stored locally). Currently PaypalService class, description contains the item_name value, change it to match the API call.
29. Since IPN messages can be delayed—hence not exactly “instant”—IPN should not be exclusively relied on when immediate order fulfillment is necessary, such as in the case of a digital download service. Use Express checkout response code to check the purchase is complete and kick-off the fulfillment.
30. Asynchronous process - IPN allows you to automatically update a database with the transaction details, send a customized order confirmation email message to the buyer
31. Use the item id to find the order id that is combined with other pass through variables.
		    If the verified response passes the checks,take action based on the value of the txn_type variable if it exists; otherwise, take action based on the value of the reason_code variable.
32. receiver_id - Unique account ID of the payment recipient (i.e., the merchant). This is the same as the recipient’s referral ID. Length: 13 characters
33. Refine the controller to handle all cases. If the response code is not 200, save the message for further investigation.
34. Save payer_email to send order confirmation and fulfillment emails. I THINK THIS IS DONE - CHECK THE CODE

Cabernet : To Do

Design

1. Redesign the pages using paper
2. Create sales page : Look at Blinksale invoicing site
3. Dashboard content : For a product, display clicks, sales, which landing pages lead to sales
4. Create blankslate for each tab.
5. Refer Evernote notes on the competitor's product manual. Create product manual.
6. **Actors**
    Seller (Merchant)
    Buyer  (Customer)
    Affiliate (Marketer)
    What does the site look like for each of these actors?
7. Draw data flow diagrams.

1. Orders controller will handle the 'Buy Now' button clicked on the sales page and handle the bounty :

Copy the OrdersController from zstore and fill in the TODO line:

if @order.save
  if @order.purchase
    # TODO : Read the cookie value here, find the affiliate who had set this cookie and record the bounty here.
    render action: 'success'
  else
    render action: 'failure'
  end
else
  render action: 'new'
end

2. Email verification using Devise for account activation. Use Sendgrid for email. Refer : send-grid.txt
3. Integrate the app to Paypal Express Checkout.
4. Provide instructions for product buy now link to vendor
5. Testing IPN messages. You can test your IPN receiver script using the IPN Simulator under Test Tools in your sandbox account. Since you cannot observe the request (it is sent from Paypal), you can save it to a file or send it to your Email account for verifying and debugging your script.
6.Paypal logger should have time stamp

1. Create account for Paypal developer forum x.com
2. Sanbox Users Guide has instructions on testing IPN using simulator.

—————————————————————————————-—————————————————————————————-
Upon IPN message processing completion:

1. Update the database with a new customer order
2. Send a confirmation email
3. Send frequency and period limited download link in the email.

—————————————————————————————-—————————————————————————————-
Customer Test Purchase

To do some basic testing in the real world you can temporarily change the charged

amount, make a purchase then issue a refund through paypal.

—————————————————————————————-—————————————————————————————-
Paypal Partner

1. Complete the application using the link sent by Greg to become a certified shopping cart provide and enable accelerated boarding.
2. How to use Express Checkout via third party API model? Follow up to question :Does this allow using third-party API model when I use Accelerated Boarding for my merchants as a shopping cart provider? here :

http://coding.smashingmagazine.com/2011/09/05/getting-started-with-the-paypal-api/comment-page-1/#comment-592186

3. What is the purpose of Certification Test Plan document? Is it possible to skip the payment confirmation page to avoid additional click?

—————————————————————————————-—————————————————————————————-

PayPal IPN using Active merchant

gist.github.com/1502215

github.com/Shopify/active_merchant/blob/master/lib/active_merchant/billing/integrations/paypal/notification.rb
activemerchant.rubyforge.org/classes/ActiveMerchant/Billing/Integrations/Paypal/Notification.html
www.fortytwo.gr/blog/14/Using-Paypal-with-Rails


def ipn
  # Create a notify object we must
  notify = Paypal::Notification.new(request.raw_post)

  #we must make sure this transaction id is not allready completed
  if !Trans.count("*", :conditions => ["paypal_transaction_id = ?",

notify.transaction_id]).zero?
     # do some logging here...
  end


  if notify.acknowledge
    begin
      if notify.complete?
         #transaction complete.. add your business logic here
      else
         #Reason to be suspicious
      end

    rescue => e
      #Houston we have a bug
    ensure
      #make sure we logged everything we must
    end
  else #transaction was not acknowledged
    # another reason to be suspicious
  end

  render :nothing => true
end

 Deployment

1. Deploy the IPN handler code.
2. Turn on IPN and specify the URL to which PayPal posts the notifications.
3. Test IPN Handler using Paypal Sandbox : # seanbehan.com/business/paypal-ipn-

simulator/

---------------------------------------------------------------------------------------

After Deployment

1) Check if domain field gets populated for clicks table when a new visitor clicks on a affiliate link.
2) Subscribe for wordpress account for affiliatelogic.biz and write articles once a week. Delegate this task.
3) Make release announcement on SVRM group, Rubyflow, Rubyinside, Ruby podcast etc.

---------------------------------------------------------------------------------------

Does the Authorize.Net API support custom fields?

Yes, you can create and submit merchant-defined fields. To do this, simply send your own name value pairs. Authorize.Net will return the value in the transaction response as well as include the value on the merchant e-mail receipt (if your account is configured for merchant e-mail receipts). However, merchant-defined fields are not stored in our database.

6) Custom Payment Pages

You can customize the checkout screens that your customers see in order to match the style of your website. In the Custom Payment Pages section of your Profile, you can create new page styles and specify settings such as the image users see at the top of the pages, the background color for the pages, and the border colors. You can create and maintain multiple page styles, but only one style at a time can be the primary style used.

Every account comes with a default style: the traditional blue-and-white pages that PayPal customers are used to seeing.

7) Do we need Thank You email customization in the app? Business name is required in this case.

8) Add Instructions to Seller. You can choose whether to offer your customers the ability to send you specific instructions when placing an order.

9) Trigger an investigation into a claim made by a dissatisfied customer. Version 2.

---------------------------------------------------------------------------------------

Delegate Task : #1

Instructions for Elance Site Redesign Project

You will receive the html and css of a site that you can use as a reference to style my site. You must replace the "todos", "messages" etc in the CSS with the corresponding name of the tabs in my application
such as "products", "account" etc.

---------------------------------------------------------------------------------------

1) Remove the text at the left upper corner (Radium Logic)
2) The color of the site is blue (different shades of blue)
3) Tabs for the site
    Left Side

    1) Dashboard
    2) Products
    3) Bonuses
    4) Affiliate Links

    Right Side

    1) Account
    2) Sign out

Anonymous user
Site Map
Login in the Home page
Signup
Become affiliate
Browse products?

After Login
Logout
Dashboard
Products
Account

4) Text input fields must be styled similar to the page : .... in the given zip file
5) Create a button for : "Create New Product" similar to "Create New Project"
6) The center of the page should have the shadow just like the Basecamp page in the zip
   file
7) Fix the Sign up page UI
8) Fix the validation error red highlight when feedback form is submitted. (Railscast 211: Validations in Rails 3, store example)
9) Products show page fields must be styled
10) Manage Inventory link must become a tab in the products show page? Decide

Remove CSS for existing design. Copy all pages and ask designer to apply the new style.
Check basecamp to see if right section is always present
Decide whether category model must be removed.

1) Images under icon directory needs to be dark to show up in the white background
2) Create Another Product link in products#index page should go to the right side like

Basecamp (style button)


